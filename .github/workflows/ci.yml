name: CI Pipeline

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  test:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      id-token: write

    strategy:
      matrix:
        include:
          - python-version: '3.11'
            experimental: false
          - python-version: '3.12'
            experimental: false
          - python-version: '3.13'
            experimental: true
    continue-on-error: ${{ matrix.experimental == true }}

    steps:
      - uses: actions/checkout@v5

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v6
        with:
          python-version: ${{ matrix.python-version }}

      - name: Cache pip dependencies
        uses: actions/cache@v4
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Set up environment variables
        run: |
          echo "SECRET_KEY=test-secret-key-for-ci" >> $GITHUB_ENV
          echo "DEBUG=False" >> $GITHUB_ENV
          echo "DJANGO_SETTINGS_MODULE=order_system.test_settings" >> $GITHUB_ENV
          echo "AFRICASTALKING_USERNAME=sandbox" >> $GITHUB_ENV
          echo "AFRICASTALKING_API_KEY=test-key" >> $GITHUB_ENV

      - name: Run migrations (sqlite)
        run: |
          python manage.py migrate --noinput --settings=order_system.test_settings --run-syncdb

      - name: Run tests with coverage
        run: |
          pytest --cov=. --cov-report=xml --cov-report=term-missing --cov-fail-under=80 --ds=order_system.test_settings

      - name: Upload coverage to Codecov (CI)
        if: ${{ !env.ACT }}
        uses: codecov/codecov-action@v5
        with:
          files: ./coverage.xml
          use_oidc: true
          fail_ci_if_error: false

      - name: Skip Codecov upload (local act)
        if: ${{ env.ACT }}
        run: echo "Skipping Codecov upload when running under nektos/act"

  lint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v5
      - name: Set up Python
        uses: actions/setup-python@v6
        with:
          python-version: '3.11'
      - name: Install linting dependencies
        run: |
          python -m pip install --upgrade pip
          pip install black
      - name: Run Black (code formatting)
        run: |
          black --check --diff .